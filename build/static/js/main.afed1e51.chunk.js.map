{"version":3,"sources":["edit.js","auth.js","App.js","serviceWorker.js","index.js"],"names":["PostCreate","props","Create","SimpleForm","TextInput","source","BooleanInput","choices","id","name","PostEdit","Edit","disabled","label","SelectInput","multiple","helperText","ImageInput","AutocompleteArrayInput","translateChoice","OrderEdit","TextField","authProvider","login","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","localStorage","setItem","checkAuth","getItem","Promise","resolve","reject","logout","removeItem","getPermissions","dataProvider","createMuiTheme","direction","jsonServerProvider","i18nProvider","polyglotI18nProvider","arabicMessages","SearchFilter","Filter","alwaysOn","App","Admin","Resource","list","ListGuesser","edit","create","filters","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afed1e51.chunk.js","sourcesContent":["// in src/posts.js\nimport * as React from \"react\";\nimport RichTextInput from 'ra-input-rich-text';\nimport {   Filter, ReferenceArrayInput, AutocompleteArrayInput, ImageInput, SelectInput, BooleanField, Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, PasswordInput, LongTextInput , EditButton , BooleanInput } from 'react-admin';\n// import { DualListInput } from '@react-admin/ra-relationships';\n\nimport { List, Datagrid, TextField } from 'react-admin';\n\nexport const PostCreate = (props) => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"fullname\" />\n            <TextInput source=\"mobile\" />\n            <TextInput source=\"username\" />\n            <BooleanInput source=\"is_provider\" />\n            <BooleanInput source=\"mobile_checked\" />\n            <BooleanInput source=\"is_active\" />\n            <RichTextInput  source=\"description\" />\n            <TextInput source=\"latitude\" />\n            <TextInput source=\"longitude\" />\n        </SimpleForm>\n    </Create>\n);\n\nconst choices = [\n    {id: 40, name: \"vehicle\"},\n    {id: 39, name: \"ac\"},\n    {id: 38, name: \"flies\"},\n    {id: 37, name: \"disinfectant\"},\n    {id: 36, name: \"sink\"},\n    {id: 35, name: \"electricity\"},\n    {id: 34, name: \"delivery\"},\n    {id: 33, name: \"carpenter\"},\n    {id: 32, name: \"colors\"},\n    {id: 31, name: \"ceramics\"},\n    {id: 30, name: \"smith\"},\n    {id: 29, name: \"alumnuim\"},\n    {id: 28, name: \"kitchen\"},\n    {id: 27, name: \"electronics\"},\n    {id: 26, name: \"mobile_fix\"},\n    {id: 25, name: \"cctv\"},\n    {id: 24, name: \"parties\"},\n    {id: 23, name: \"safari\"},\n    {id: 22, name: \"sweets\"},\n    {id: 21, name: \"family_biz\"},\n    {id: 20, name: \"taxi\"},\n    {id: 19, name: \"wiw\"},\n    {id: 18, name: \"barber\"},\n    {id: 17, name: \"wash\"},\n    {id: 16, name: \"coop\"},\n    {id: 15, name: \"vegan\"},\n    {id: 14, name: \"meat\"},\n    {id: 13, name: \"coffee\"},\n    {id: 12, name: \"cook\"},\n    {id: 11, name: \"pencils\"},\n    {id: 10, name: \"teachers\"},\n    {id: 9, name: \"students\"},\n    {id: 8, name: \"car_ele\"},\n    {id: 7, name: \"car_mech\"},\n    {id: 6, name: \"batteries\"},\n    {id: 5, name: \"car_mech\"},\n    {id: 4, name: \"long_vehicle\"},\n    {id: 3, name: \"soccer\"},\n    {id: 2, name: \"marriage\"},\n    {id: 1, name: \"car_wash\"},\n ];\n\nexport const PostEdit = (props) => (\n    <Edit {...props}>\n            <SimpleForm>        \n            <TextInput disabled label=\"Id\" source=\"id\" />\n            <TextInput source=\"fullname\" />\n            <RichTextInput source=\"description\" />\n            <BooleanInput source=\"is_provider\" />\n            <BooleanInput source=\"is_active\"/>\n            <BooleanInput source=\"mobile_checked\"/>\n            <BooleanInput source=\"is_disabled\" label=\"Disable service provider?\"/>\n            <TextInput source=\"latitude\" />\n            <TextInput source=\"longitude\" />\n\n            <SelectInput multiple helperText=\"Set the service provider rating\" source=\"score\" choices={[\n            { id: 1, name: '1' },\n            { id: 2, name: '2' },\n            { id: 3, name: '3' },\n            { id: 4, name: '4' },\n            { id: 5, name: '5' },\n            \n            ]} \n            />\n\n\n<ImageInput source=\"image\"/>\n<AutocompleteArrayInput source=\"services\" choices={choices} translateChoice={false}/>\n\n        \n{/* <SelectInput source=\"services\" multiple /> */}\n\n\n</SimpleForm>\n</Edit>\n);\n\n\nexport const OrderEdit = (props) => (\n    <Edit {...props}>\n    <SimpleForm>        \n            <TextField disabled label=\"Id\" source=\"id\" />\n            <TextField source=\"user_id\" />\n            <TextField source=\"provider_id\" />\n            <TextField source=\"uuid\" />\n            <SelectInput multiple helperText=\"Service ID\" source=\"category\" choices={choices} />\n    </SimpleForm>\n    </Edit>\n);\n\n\n\n\n\nexport const Providers = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"fullname\" />\n            <TextField source=\"username\" />\n            <BooleanField source=\"is_active\" />\n            <BooleanField source=\"is_provider\" />\n            <BooleanField source=\"mobile_checked\" />\n        </Datagrid>\n    </List>\n);\n\n\n\n","// in src/authProvider.js\n\n/*\nlet userIdentity = {};\n\nconst authProvider = {\n    login: ({ username, password }) => {\n        // call the login endpoint, which returns id, fullName, avatar\n        // ...\n        // and store it in the closure\n        userIdentity = { id, fullName, avatar };\n    },\n    getIdentity: () => {\n        return userIdentity;\n    }\n    // ...\n};\n*/\nconst authProvider = {\n    login: ({ username, password }) =>  {\n        const request = new Request('https://ondemand.soluspay.net/admin/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                localStorage.setItem('token', token);\n            });\n    },\n    checkAuth: () => localStorage.getItem('token')\n    ? Promise.resolve()\n    : Promise.reject(),\n    logout: ()=> {localStorage.removeItem(\"token\");\n    return Promise.resolve();},\n    getPermissions: () => localStorage.getItem('token')\n    ? Promise.resolve()\n    : Promise.reject(),\n    \n};\n\nexport default authProvider;","import * as React from \"react\";\n\nimport jsonServerProvider from 'ra-data-json-server';\nimport { Admin, Resource, ListGuesser } from 'react-admin';\nimport { PostCreate, PostEdit, Providers, OrderEdit } from './edit';\n\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport arabicMessages from 'ra-language-arabic';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport authProvider from \"./auth\";\nimport {   Filter, TextInput } from 'react-admin';\n\nconst theme = createMuiTheme({\n  direction: 'rtl',\n});\n\nconst dataProvider = jsonServerProvider('https://ondemand.soluspay.net/admin');\n// const App = () => <Admin dataProvider={dataProvider} />;\n\n\nconst i18nProvider = polyglotI18nProvider(() => arabicMessages, 'ar');\n\nconst App = () => (\n      <Admin authProvider={authProvider} dataProvider={dataProvider} i18nProvider={i18nProvider}>\n          <Resource name=\"providers\" list={ListGuesser} edit={PostEdit} create={PostCreate}/>\n          <Resource name=\"users\" list={ListGuesser} edit={PostEdit} create={PostCreate}/>\n          <Resource name=\"count\" list={ListGuesser} />\n          <Resource name=\"orders\" list={ListGuesser} edit={OrderEdit} filters={<SearchFilter/>} />\n      </Admin>\n  );\n\n  export const SearchFilter = props => (\n    <Filter {...props}>\n      <TextInput label=\"Search\" source=\"name\" alwaysOn />\n    </Filter>\n  )\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}